{"version":3,"file":"cms-web.js","sourceRoot":"","sources":["src/cms-web.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC;;;;;GAKG;AAEH,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAAzC;;QAsBE;;WAEG;QAEH,UAAK,GAAG,CAAC,CAAC;IA0CZ,CAAC;IAxCC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC;QACZ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;YAC9B,OAAO,GAAG,SAAS,CAAC;SACrB;aAAM;YACL,OAAO,GAAG;gBACR,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC;SACH;QACD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACpD,MAAM,CAAC,SAAS,CAAC;YACf;gBACE,IAAI,EAAE,GAAG;gBACT,SAAS,EAAE,YAAY;gBACvB,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,eAAe;wBACrB,SAAS,EAAE,qBAAqB;qBACjC;oBACD;wBACE,IAAI,EAAE,SAAS;wBACf,SAAS,EAAE,eAAe;qBAC3B;oBACD;wBACE,IAAI,EAAE,UAAU;wBAChB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,EAAE,CAAC;IAChB,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAnEQ,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;GAalB,CAAC;AAMF;IADC,QAAQ,EAAE;0CACiB;AAM5B;IADC,KAAK,EAAE;wCACE;AA1BC,SAAS;IADrB,aAAa,CAAC,SAAS,CAAC;GACZ,SAAS,CAoErB;SApEY,SAAS","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { LitElement, html, css } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { Router } from '@vaadin/router';\n\n/**\n * An example element.\n *\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('cms-web')\nexport class MyElement extends LitElement {\n  static styles = css`\n    :host {\n      box-sizing: border-box;\n      display: block;\n      border: solid 1px gray;\n      padding: 16px;\n      max-width: 800px;\n    }\n    :host *,\n    :host *::before,\n    :host *::after {\n      box-sizing: inherit;\n    }\n  `;\n\n  /**\n   * Base URl\n   */\n  @property()\n  baseURL: string | undefined;\n\n  /**\n   * The number of times the button has been clicked.\n   */\n  @state()\n  count = 0;\n\n  connectedCallback() {\n    super.connectedCallback();\n    let options;\n    if (this.baseURL === undefined) {\n      options = undefined;\n    } else {\n      options = {\n        baseUrl: this.baseURL,\n      };\n    }\n    const router = new Router(this.renderRoot, options);\n    router.setRoutes([\n      {\n        path: '/',\n        component: 'delta-base',\n        children: [\n          {\n            path: 'content-model',\n            component: 'delta-content-model',\n          },\n          {\n            path: 'content',\n            component: 'delta-content',\n          },\n          {\n            path: 'workflow',\n            component: 'delta-workflow',\n          },\n        ],\n      },\n    ]);\n  }\n\n  render() {\n    return html``;\n  }\n\n  createRenderRoot() {\n    return this;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cms-web': MyElement;\n  }\n}\n"]}