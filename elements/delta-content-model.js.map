{"version":3,"file":"delta-content-model.js","sourceRoot":"","sources":["../src/elements/delta-content-model.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,gBAAgB,CAAC;AACxB;;;;GAIG;AAEH,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD;;;;;GAKG;AAEH,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,UAAU;IA6BrC,MAAM;QACd,OAAO,IAAI,CAAA;;;;4CAI6B,IAAI,CAAC,mBAAmB;;;mCAGjC,IAAI,CAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;;;KAwB9C,CAAC;IACJ,CAAC;IACO,mBAAmB,CAAC,CAAQ;QAClC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IACO,WAAW,CAAC,CAAQ;QAC1B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;CACF,CAAA;AAxEQ,wBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BlB,CAAC;AA5BS,iBAAiB;IAD7B,aAAa,CAAC,qBAAqB,CAAC;GACxB,iBAAiB,CAyE7B;SAzEY,iBAAiB","sourcesContent":["import './delta-button';\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { LitElement, html, css } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('delta-content-model')\nexport class DeltaContentModel extends LitElement {\n  static styles = css`\n    ul,\n    ul * {\n      all: unset;\n    }\n    ul {\n      display: flex;\n      flex-direction: column;\n      gap: 30px;\n    }\n    #categories > h1 {\n      margin-top: 50px;\n      margin-bottom: 50px;\n      /* TODO: temporary color for differenciation */\n      color: red;\n    }\n    #page-header {\n      background-color: grey;\n      padding: 25px;\n      display: flex;\n      flex-direction: row-reverse;\n    }\n    #page-header > div {\n      width: fit-content;\n      display: flex;\n      gap: 40px;\n    }\n  `;\n  protected render() {\n    return html`\n      <main aria-label=\"Content Model\">\n        <header id=\"page-header\">\n          <div role=\"presentation\">\n            <delta-button outlined @click=${this._addContentCategory}\n              >Add content category</delta-button\n            >\n            <delta-button @click=${this._addContent}\n              >Add content type</delta-button\n            >\n          </div>\n        </header>\n        <nav id=\"categories\">\n          <!-- TODO: look for better html tag for title semantics -->\n          <h1>Categories</h1>\n          <ul>\n            <li>\n              <a href=\"/dev/\">Cat 1</a>\n            </li>\n            <li>\n              <a href=\"/dev/a\">Cat 2</a>\n            </li>\n            <li>\n              <a href=\"/dev/b\">Cat 3</a>\n            </li>\n            <li>\n              <a href=\"/dev/c\">Cat 4</a>\n            </li>\n          </ul>\n        </nav>\n      </main>\n    `;\n  }\n  private _addContentCategory(e: Event) {\n    console.log('cat');\n    const event = new CustomEvent('cat', { detail: 'cat' });\n    this.dispatchEvent(event);\n  }\n  private _addContent(e: Event) {\n    console.log('type');\n    const event = new CustomEvent('type', { detail: 'type' });\n    this.dispatchEvent(event);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'delta-content-model': DeltaContentModel;\n  }\n}\n"]}