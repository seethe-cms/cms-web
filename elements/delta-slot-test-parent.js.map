{"version":3,"file":"delta-slot-test-parent.js","sourceRoot":"","sources":["../src/elements/delta-slot-test-parent.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,gBAAgB,CAAC;AACxB;;;;GAIG;AAEH,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAY,MAAM,mBAAmB,CAAC;AAE5D;;;;;GAKG;AAEH,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,UAAU;IAMjD,MAAM;QACJ,OAAO,IAAI,CAAA,0CAA0C,CAAC;IACxD,CAAC;CACF,CAAA;AARQ,0BAAM,GAAG,GAAG,CAAA;;;;GAIlB,CAAC;AALS,mBAAmB;IAD/B,aAAa,CAAC,wBAAwB,CAAC;GAC3B,mBAAmB,CAS/B;SATY,mBAAmB","sourcesContent":["import './delta-button';\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('delta-slot-test-parent')\nexport class DeltaSlotTestParent extends LitElement {\n  static styles = css`\n    ::slotted(p) {\n      color: blue;\n    }\n  `;\n  render() {\n    return html`<slot name=\"route\"></slot> <slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'delta-slot-test-parent': DeltaSlotTestParent;\n  }\n}\n"]}