{"version":3,"file":"base.js","sourceRoot":"","sources":["../src/elements/base.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,gBAAgB,CAAC;AACxB;;;;GAIG;AAEH,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,iEAAiE;AACjE;;;;;GAKG;AAEH,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAgCvC,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;KAuBV,CAAC;IACJ,CAAC;CACF,CAAA;AAzDQ,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BlB,CAAC;AA/BS,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CA0DrB;SA1DY,SAAS","sourcesContent":["import './delta-button';\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { LitElement, html, css } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\n//TODO \"/dev\" should be dynamic, based on vaadin-router \"baseURL\"\n/**\n * An example element.\n *\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('delta-base')\nexport class MyElement extends LitElement {\n  static styles = css`\n    ul,\n    ul * {\n      all: unset;\n    }\n    ul {\n      display: flex;\n      padding-left: 200px;\n      padding-right: 200px;\n    }\n    nav {\n      color: black;\n      background-color: #9999ff;\n    }\n    a {\n      all: unset;\n      display: inline-block;\n      padding-left: 30px;\n      padding-right: 30px;\n      padding-top: 15px;\n      padding-bottom: 15px;\n    }\n    a:hover {\n      cursor: pointer;\n      background-color: #6600ff;\n    }\n    a:focus {\n      cursor: pointer;\n      background-color: #a200ff;\n    }\n  `;\n  render() {\n    return html`\n      <header>\n        <!-- TODO: Make this an element -->\n        <nav>\n          <ul>\n            <li>\n              <a href=\"/dev/content-model\">Content Model</a>\n            </li>\n            <li>\n              <a href=\"/dev/content\">Content</a>\n            </li>\n            <li>\n              <a href=\"/dev/workflow\">Workflow</a>\n            </li>\n            <li>\n              <a>Media</a>\n            </li>\n          </ul>\n        </nav>\n        <!-- -->\n      </header>\n      <!-- This label needs to be dynamic -->\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'delta-base': MyElement;\n  }\n}\n"]}